#N canvas 910 55 863 1000 12;
#X obj 18 20 inlet~;
#X obj 30 434 bang~;
#N canvas 873 425 450 467 copy-to-buffer 0;
#X obj 30 39 inlet;
#X obj 30 68 t b f;
#X obj 30 126 until;
#X obj 30 184 t f f;
#X obj 142 213 +;
#X obj 30 242 pack f f;
#X obj 30 155 f;
#X obj 65 155 + 1;
#X msg 83 126 0;
#X obj 30 97 64;
#X obj 58 97 r \$0-block;
#X text 149 99 count from pointer - pointer + blocksize;
#X obj 30 213 tabread \$0-tab;
#X obj 30 271 tabwrite \$1;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 1 1 4 1;
#X connect 1 1 8 0;
#X connect 2 0 6 0;
#X connect 3 0 12 0;
#X connect 3 1 4 0;
#X connect 4 0 5 1;
#X connect 5 0 13 0;
#X connect 6 0 7 0;
#X connect 6 0 3 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 2 0;
#X connect 10 0 9 1;
#X connect 12 0 5 0;
#X restore 113 551 pd copy-to-buffer;
#X msg 133 372 resize \$1;
#X obj 21 343 * 64;
#X obj 30 580 + 64;
#X obj 30 609 %;
#X obj 21 372 s \$0-buff-size;
#X obj 63 609 r \$0-buff-size;
#X obj 30 493 f 0;
#X obj 30 522 t f f f;
#X obj 155 198 s \$0-block;
#X obj 21 226 block~;
#X obj 21 256 r \$0-block;
#X obj 70 580 r \$0-block;
#X obj 21 285 t b f;
#X msg 75 197 resize \$1;
#X msg 21 197 set \$1;
#X msg 76 434 0;
#X obj 87 812 vline~;
#X obj 161 693 samplerate~;
#X obj 87 753 pack f f f, f 11;
#X msg 87 782 \$1 \, \$2 \$3;
#X obj 87 664 t f f b;
#X obj 34 692 r \$0-block;
#X obj 3 722 - 64;
#X obj 87 870 +~ 0;
#X obj 87 899 %~ 0;
#X obj 129 870 r \$0-buff-size;
#X obj 143 812 r \$0-extra-delay-samp;
#X obj 209 20 inlet;
#X obj 87 841 -~ 0;
#X obj 87 928 outlet~;
#N canvas 249 276 669 462 routing 0;
#X obj 19 16 inlet;
#X obj 19 45 route float;
#X obj 184 103 r \$0-buff-size;
#X obj 149 132 s \$0-extra-delay-samp;
#X obj 197 74 s \$0-new-block-size;
#X obj 319 208 r \$0-block;
#X obj 294 296 i;
#X obj 294 150 loadbang;
#X obj 294 325 s \$0-block-count;
#X obj 294 267 / 64;
#X obj 294 179 samplerate~;
#X text 404 150 new buffer size;
#X text 404 179 (default is 1 sec);
#X text 404 266 snaps to block size;
#X obj 319 237 t b f;
#X obj 149 74 max 0;
#X obj 149 103 min;
#X obj 348 74 s \$0-reset;
#X obj 197 45 route delay block-size buffer-size sync start stop;
#X msg 428 74 1;
#X msg 469 74 0;
#X obj 428 103 s \$0-toggle;
#X obj 19 74 select 0;
#X msg 19 103 0;
#X msg 72 103 1;
#X obj 19 132 s \$0-toggle;
#X connect 0 0 1 0;
#X connect 1 0 22 0;
#X connect 1 1 18 0;
#X connect 2 0 16 1;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 14 0 9 0;
#X connect 14 1 9 1;
#X connect 15 0 16 0;
#X connect 16 0 3 0;
#X connect 18 0 15 0;
#X connect 18 1 4 0;
#X connect 18 2 9 0;
#X connect 18 3 17 0;
#X connect 18 4 19 0;
#X connect 18 5 20 0;
#X connect 19 0 21 0;
#X connect 20 0 21 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 23 0 25 0;
#X connect 24 0 25 0;
#X restore 209 49 pd routing;
#X obj 21 169 r \$0-new-block-size;
#X obj 21 314 5;
#X obj 18 78 table \$0-tab;
#X obj 75 226 s \$0-tab;
#X obj 66 285 r \$0-block-count;
#X text 354 185 left inlet: signal to buffer;
#X text 354 355 outlet: record head position (samples) with additional
delay of one block plus whatever extra delay is specified;
#X text 354 400 arguments:\$1 - buffer table name;
#X text 354 124 Note: this abstraction will change the buffer to the
appropriate size for the values specified. Don't change the buffer
table if you don't want things to blow up!;
#X text 354 31 circular buffer - a complicated-looking patch for a
simple concept. Constantly records audio to a buffer (outside this
abstraction) and reports where it's recording to \, looping at the
edge of the buffer. Designed so you can plug it right in to tabread4~
and hear a delay without clicks.;
#X text 354 489 implementation details:every cycle / block \, the
inlet data is written to a table (\$0-tab) the size of one block \,
then copied to the "real" buffer (\$1) at the record head point. This
value is reported \, then incremented.;
#X text 354 694 report position in samples.send the current record
head position (less one block) to vline~ so it increments throughout
the block duration. Add additional delay and modulo at the buffer boundary.
;
#X obj 18 49 tabsend~ \$0-tab;
#X obj 133 401 s \$1;
#X obj 66 314 t b f;
#X obj 305 664 r \$0-block;
#X obj 305 693 64;
#X obj 241 664 loadbang;
#X obj 161 722 expr $f2 * 1000 / $f1;
#X obj 108 434 r \$0-reset;
#X obj 30 463 spigot 1;
#X obj 100 463 r \$0-toggle;
#X text 354 214 right inlet: control- `block-size \$1` - set how many
samples are computed each block- `buffer-size \$1` - set how many
samples the buffer can hold (snapped to a multiple of block-size \,
rounded down)- `delay \$1` - add additional delay to output (samples)-
sync - reset rec-head to 0- 1/0 or start/stop - start or stop recording
;
#X connect 0 0 46 0;
#X connect 1 0 54 0;
#X connect 3 0 47 0;
#X connect 4 0 3 0;
#X connect 4 0 7 0;
#X connect 5 0 6 0;
#X connect 6 0 9 1;
#X connect 8 0 6 1;
#X connect 9 0 10 0;
#X connect 10 0 5 0;
#X connect 10 1 23 0;
#X connect 10 2 2 0;
#X connect 13 0 15 0;
#X connect 14 0 5 1;
#X connect 15 0 35 0;
#X connect 15 1 4 1;
#X connect 16 0 37 0;
#X connect 17 0 12 0;
#X connect 18 0 9 1;
#X connect 19 0 31 0;
#X connect 20 0 52 0;
#X connect 21 0 22 0;
#X connect 22 0 19 0;
#X connect 23 0 25 0;
#X connect 23 1 21 1;
#X connect 23 2 20 0;
#X connect 24 0 25 1;
#X connect 25 0 21 0;
#X connect 26 0 27 0;
#X connect 27 0 32 0;
#X connect 28 0 26 1;
#X connect 28 0 27 1;
#X connect 29 0 31 1;
#X connect 30 0 33 0;
#X connect 31 0 26 0;
#X connect 34 0 11 0;
#X connect 34 0 17 0;
#X connect 34 0 16 0;
#X connect 35 0 4 0;
#X connect 38 0 48 0;
#X connect 48 0 35 0;
#X connect 48 1 35 1;
#X connect 49 0 50 0;
#X connect 50 0 52 1;
#X connect 51 0 50 0;
#X connect 52 0 21 2;
#X connect 53 0 18 0;
#X connect 54 0 9 0;
#X connect 55 0 54 1;
